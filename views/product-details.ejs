<!DOCTYPE html>
<html>
  <head>
    <title><%= product.name %></title>
    <link href="/styles/output.css" rel="stylesheet" />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;600&family=Jaro&display=swap"
      rel="stylesheet"
    />

    <style>

.notification {
      position: fixed;
      top: 20px;
      right: 20px;
      background-color: black;
      color: white;
      padding: 15px;
      border-radius: 5px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      display: flex;
      align-items: center;
      gap: 10px;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s, visibility 0.3s;
    }

    .notification.show {
      opacity: 1;
      visibility: visible;
    }

    .notification a {
      color: #00aaff;
      text-decoration: none;
    }

    .notification a:hover {
      text-decoration: underline;
    }

    .notification .close-notification {
      background: none;
      border: none;
      color: white;
      font-size: 16px;
      cursor: pointer;
    }
    </style>
  </head>

  <body>
    <%- include('partials/_header') %>
   
    <div class="notification" id="notification">
      <span id="notification-text"></span>
      <a href="/shoppingCart" id="view-cart">View Cart</a>
      <button class="close-notification" id="close-notification">×</button>
    </div>
    <main
      class="flex flex-col gap-10 md:flex-row w-full py-16 px-8 md:px-20 max-w-screen-2xl mx-auto md:items-center"
    >
      <img
       src="/<%= product.image %>"
        alt="<%= product.description %>"
        class="w-full md:w-1/3"
      />
      <div class="flex flex-col gap-8 items-center md:items-start">
        <h1><%= product.name  %></h1>
        <p>
          Poster i stående format som fångar essensen av svensk fika-kultur.
          Motivet visar en närbild av en nygräddad kanelbulle, med ett stänk av
          pärlsocker som nästan känns doftande. Den varma färgpaletten och den
          minimalistiska designen gör postern perfekt för köket, fikahörnan
          eller vardagsrummet.
        </p>
        <button id="add-to-cart-btn" class="add-to-cart-btn primary-button md:self-start"data-product-id="<%= product.id %>"
          data-product-price="<%= product.price %>" data-product-name="<%= product.name %>" >Lägg till i varukorgen</button>
      </div>

    </main>

    <%- include('partials/_footer') %>


    <script>
// Utility function to save cart-badge value
function saveCartBadge(value) {
  localStorage.setItem('cartBadge', value);
}

// Utility function to load cart-badge value
function loadCartBadge() {
  return parseInt(localStorage.getItem('cartBadge')) || 0; // Ensure it's a number
}

// Restore cart-badge on page load
window.addEventListener('DOMContentLoaded', () => {
  const cartBadgeElement = document.getElementById('cart-badge');
  const cartBadgeValue = loadCartBadge();
  if (cartBadgeElement) {
    cartBadgeElement.textContent = cartBadgeValue;
    if (cartBadgeValue > 0) {
      cartBadgeElement.style.display = 'flex'; // Show badge only if > 0
    }
  }
});
function loadCartBadge() {
  return parseInt(localStorage.getItem('cartBadge')) || 0;
}

function restoreCartBadge() {
  const cartBadgeElement = document.getElementById('cart-badge');
  const cartBadgeValue = loadCartBadge();
  if (cartBadgeElement) {
    cartBadgeElement.textContent = cartBadgeValue;
    if (cartBadgeValue > 0) {
      cartBadgeElement.style.display = 'flex';
    }
  }
}

window.addEventListener('DOMContentLoaded', restoreCartBadge);

document.querySelector('.add-to-cart-btn').addEventListener('click', async function () {
  const productId = this.getAttribute('data-product-id');
  const productName = this.getAttribute('data-product-name');
  const price = this.getAttribute('data-product-price'); // Get the product price
  const quantity = 1; // Default quantity
  const userId = 1; // Temporary user ID for testing

  const notification = document.getElementById('notification');
  const notificationText = document.getElementById('notification-text');
  const closeNotification = document.getElementById('close-notification');

  try {
    const response = await fetch('/cartAPI', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ product_id: productId, user_id: userId, quantity, price }),
    });

    if (response.ok) {
      // Update cart badge
      const cartBadge = document.getElementById('cart-badge');
      let currentBadgeValue = parseInt(cartBadge.textContent) || 0;
      currentBadgeValue += quantity;
      cartBadge.textContent = currentBadgeValue;
      cartBadge.style.display = 'flex'; // Ensure badge is visible
      saveCartBadge(currentBadgeValue); // Save updated value to localStorage

      // Show notification
      notificationText.textContent = `${productName} has been added to your cart!`;
      notification.classList.add('show');
      setTimeout(() => {
        notification.classList.remove('show');
      }, 5000);
      closeNotification.addEventListener('click', () => {
        notification.classList.remove('show');
      });
    } else {
      console.error('Failed to add to cart');
    }
  } catch (error) {
    console.error('Error adding to cart:', error);
  }
});
    </script>
  </body>
</html>
